error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;  # 최대 연결 수 설정
}

http {

    upstream httpd {
        server 10.0.4.247:80;
    }

    upstream backend {
        server 10.0.4.74:8000;
    }

    upstream backendt {
        server 10.0.4.74:8001;
    }

    upstream kafkaui {
	server 10.0.4.172:8080;
    }

    upstream sparkui {
	server 10.0.4.156:8080;
    }

    upstream airflowui {
        server 10.0.4.185:8080;
    }

    upstream airflowui2 {
        server 10.0.4.228:8080;
    }

    proxy_set_header Host $host;                  # 요청된 호스트명 전달
    proxy_set_header X-Real-IP $remote_addr;      # 클라이언트의 실제 IP 전달
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 클라이언트 IP 체인 전달
    proxy_set_header X-Forwarded-Proto https;   # 클라이언트의 요청 프로토콜 전달 (http/https)

    server {
        listen 80;
        server_name parkingissue.online www.parkingissue.online;

        # Let's Encrypt 인증을 위한 경로 설정
        location /.well-known/acme-challenge/ {
	    allow all;
            root /var/www/html;
        }

        # HTTP 요청을 HTTPS로 리다이렉트
        location / {
	     return 301 https://$host$request_uri;
	}
    }

    server {
	listen 443 ssl;
        server_name parkingissue.online www.parkingissue.online;

        # SSL 인증서 경로
	ssl_certificate /etc/letsencrypt/live/parkingissue.online/fullchain.pem;
	ssl_certificate_key /etc/letsencrypt/live/parkingissue.online/privkey.pem;

	include /etc/letsencrypt/options-ssl-nginx.conf;
	ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        # HTTPD 프록시 설정
        location / {
            proxy_pass http://httpd/;
        }
	
	location /mainpage.html {
            rewrite ^/mainpage.html$ /main?${query_string} redirect;
            proxy_pass http://httpd/mainpage.html;
        }

        location /main {
            proxy_pass http://httpd/mainpage.html;
        }	
	
	# /party.html에 접근하면 /hotplace로 리디렉션
	location = /party.html {
	    return 301 /hotplace;
	}

	# /hotplace에 대한 요청을 내부적으로 처리하도록 리버스 프록시 설정
	location /hotplace {
    	    proxy_pass http://httpd/party.html;
	}

	location /favor.html {
            return 301 /favor;
        }
	
    	location /favor {
            proxy_pass http://httpd/favor.html;
    	}

	location /parkinginfo.html {
	    rewrite ^/parkinginfo.html$ /info?${query_string} redirect;
            proxy_pass http://httpd/parkinginfo.html;
    	}

    	location /info {
            proxy_pass http://httpd/parkinginfo.html;
    	}

	location ^~ /api {
    	    proxy_pass http://backend;
	    proxy_read_timeout 5;
	}

	location ^~ /api2 {
            proxy_pass http://backendt;
            proxy_read_timeout 5;
        }
	# kafkaui 프록시 설정
	location /kafkaui {
	    proxy_pass http://10.0.4.172:8080;
	}

	# spark 프록시 설정
        location /sparkui {
            proxy_pass http://10.0.4.156:8080;
        }

	# airflow 프록시 설정
        location /airflowui {
            proxy_pass http://10.0.4.185:8080;
      	    proxy_redirect off;
        }
	location /airflowui/flower {
            proxy_pass http://10.0.4.185:5555;
            proxy_redirect off;
        }
	# airflow2 프록시 설정
        location /airflowui2 {
            proxy_pass http://10.0.4.228:8080;
      	    proxy_redirect off;
        }
	location /airflowui2/flower {
            proxy_pass http://10.0.4.228:5555;
            proxy_redirect off;
        }

    }
}

